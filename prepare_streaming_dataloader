def prepare_streaming_dataloader(annotation_file, data_dir=DATA_DIR, batch_size=32, 
                              streaming_mode=False, use_random_crop=False, 
                              cache_dir=None, shuffle=True, seed=42, 
                              use_feature_augmentation=False, jitter_ratio=0.02, mask_ratio=0.05):
    """
    准备用于流式训练的数据加载器
    
    Args:
        annotation_file: 标注文件路径
        data_dir: 音频数据目录
        batch_size: 批处理大小
        streaming_mode: 是否使用流式模式
        use_random_crop: 是否使用随机裁剪
        cache_dir: 特征缓存目录
        shuffle: 是否打乱数据顺序
        seed: 随机种子，用于重现性
        use_feature_augmentation: 是否启用特征增强
        jitter_ratio: 特征抖动比例
        mask_ratio: 特征掩码比例
        
    Returns:
        data_loader: 数据加载器
        intent_labels: 意图标签列表
    """
    # 设置随机种子
    if seed is not None:
        random.seed(seed)
        np.random.seed(seed)
        torch.manual_seed(seed)
        if torch.cuda.is_available():
            torch.cuda.manual_seed(seed)
            torch.cuda.manual_seed_all(seed)
    
    # 创建数据集
    dataset = StreamingAudioDataset(
        annotation_file=annotation_file,
        data_dir=data_dir,
        streaming_mode=streaming_mode,
        use_random_crop=use_random_crop,
        cache_dir=cache_dir,
        use_feature_augmentation=use_feature_augmentation,
        jitter_ratio=jitter_ratio,
        mask_ratio=mask_ratio
    ) 